group = "com.tsystems.flutter_fluid_markdown"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' } // Add this line
        flatDir {
            dirs 'libs'
        }
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.tsystems.flutter_fluid_markdown"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'com.vdurmont:emoji-java:5.1.1'

        // CommonMark
        api 'com.atlassian.commonmark:commonmark:0.13.0'
        api 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.13.0'

        // LaTeX
        api 'ru.noties:jlatexmath-android:0.2.0'
        api 'ru.noties:jlatexmath-android-font-cyrillic:0.2.0'
        api 'ru.noties:jlatexmath-android-font-greek:0.2.0'

        api fileTree(include: ['*.aar'], dir: 'libs')
        api fileTree(include: ['*.jar'], dir: 'libs')

        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
